// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.190730.2

#ifndef WINRT_Windows_Phone_System_0_H
#define WINRT_Windows_Phone_System_0_H
namespace winrt::Windows::Phone::System
{
    struct ISystemProtectionStatics;
    struct ISystemProtectionUnlockStatics;
    struct SystemProtection;
}
namespace winrt::impl
{
    template <> struct category<Windows::Phone::System::ISystemProtectionStatics>
    {
        using type = interface_category;
    };
    template <> struct category<Windows::Phone::System::ISystemProtectionUnlockStatics>
    {
        using type = interface_category;
    };
    template <> struct category<Windows::Phone::System::SystemProtection>
    {
        using type = class_category;
    };
    template <> struct name<Windows::Phone::System::ISystemProtectionStatics>
    {
        static constexpr auto & value{ L"Windows.Phone.System.ISystemProtectionStatics" };
    };
    template <> struct name<Windows::Phone::System::ISystemProtectionUnlockStatics>
    {
        static constexpr auto & value{ L"Windows.Phone.System.ISystemProtectionUnlockStatics" };
    };
    template <> struct name<Windows::Phone::System::SystemProtection>
    {
        static constexpr auto & value{ L"Windows.Phone.System.SystemProtection" };
    };
    template <> struct guid_storage<Windows::Phone::System::ISystemProtectionStatics>
    {
        static constexpr guid value{ 0x49C36560,0x97E1,0x4D99,{ 0x8B,0xFB,0xBE,0xFE,0xAA,0x6A,0xCE,0x6D } };
    };
    template <> struct guid_storage<Windows::Phone::System::ISystemProtectionUnlockStatics>
    {
        static constexpr guid value{ 0x0692FA3F,0x8F11,0x4C4B,{ 0xAA,0x0D,0x87,0xD7,0xAF,0x7B,0x17,0x79 } };
    };
    template <> struct abi<Windows::Phone::System::ISystemProtectionStatics>
    {
        struct __declspec(novtable) type : inspectable_abi
        {
            virtual int32_t __stdcall get_ScreenLocked(bool*) noexcept = 0;
        };
    };
    template <> struct abi<Windows::Phone::System::ISystemProtectionUnlockStatics>
    {
        struct __declspec(novtable) type : inspectable_abi
        {
            virtual int32_t __stdcall RequestScreenUnlock() noexcept = 0;
        };
    };
    template <typename D>
    struct consume_Windows_Phone_System_ISystemProtectionStatics
    {
        [[nodiscard]] auto ScreenLocked() const;
    };
    template <> struct consume<Windows::Phone::System::ISystemProtectionStatics>
    {
        template <typename D> using type = consume_Windows_Phone_System_ISystemProtectionStatics<D>;
    };
    template <typename D>
    struct consume_Windows_Phone_System_ISystemProtectionUnlockStatics
    {
        auto RequestScreenUnlock() const;
    };
    template <> struct consume<Windows::Phone::System::ISystemProtectionUnlockStatics>
    {
        template <typename D> using type = consume_Windows_Phone_System_ISystemProtectionUnlockStatics<D>;
    };
}
#endif
